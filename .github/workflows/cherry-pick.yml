name: Cherry-Pick Fix

on:
  workflow_dispatch:
    inputs:
      sprint_number:
        description: "Sprint number for the release branch"
        required: true
      fix_commit_ref:
        description: "Commit SHA or branch containing the fix"
        required: true

jobs:
  cherry_pick_fix:
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment
        run: |
          echo "SPRINT_NUMBER=${{ github.event.inputs.sprint_number }}" >> $GITHUB_ENV
          echo "FIX_REF=${{ github.event.inputs.fix_commit_ref }}" >> $GITHUB_ENV
          echo "RELEASE_BRANCH=release-v2.${{ github.event.inputs.sprint_number }}" >> $GITHUB_ENV

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_BRANCH }}

      - name: Cherry-Pick the Fix
        run: |
          set -e
          git fetch --all
          git checkout $RELEASE_BRANCH
          git cherry-pick $FIX_REF || (echo "Conflicts detected. Please resolve manually." && exit 1)
          git push origin $RELEASE_BRANCH

      - name: Determine Next RC Tag
        id: next_rc
        run: |
          # RC tags look like v2.<sprint_number>.<x>-rc
          SPRINT_NUMBER=${{ env.SPRINT_NUMBER }}
          EXISTING_RC_TAGS=$(git tag --list "v2.${SPRINT_NUMBER}.*-rc")
          if [ -z "$EXISTING_RC_TAGS" ]; then
            # If no RC tags, start at .0-rc
            NEXT_RC="v2.${SPRINT_NUMBER}.0-rc"
          else
            # Extract the numeric portion before -rc
            HIGHEST_RC=$(echo "$EXISTING_RC_TAGS" | sed -E 's/v2\.'$SPRINT_NUMBER'\.([0-9]+)-rc/\1/g' | sort -n | tail -1)
            NEXT=$((HIGHEST_RC+1))
            NEXT_RC="v2.${SPRINT_NUMBER}.${NEXT}-rc"
          fi
          echo "NEXT_RC=$NEXT_RC" >> $GITHUB_OUTPUT

      - name: Create New RC Tag and Release
        run: |
          NEXT_RC="${{ steps.next_rc.outputs.NEXT_RC }}"
          git tag $NEXT_RC
          git push origin $NEXT_RC
          gh release create $NEXT_RC --title "v2.${SPRINT_NUMBER} RC Release" --notes "Cherry-picked fix included: $FIX_REF"

      - name: Notify QA/Stakeholders
        run: |
          echo "New RC available: ${{ steps.next_rc.outputs.NEXT_RC }} with fix $FIX_REF"
          # Add notification logic here (Slack, email, etc.)
